#+title: Macos problem with HEX input
#+date: <2023-01-24 23:32>
#+description:
#+filetags: macos,keyboard,ua

If you're typing using non-english symbols like ς or ґ you might have problems with entering those into modern computers -- there are different encoding systems, as well as different keyboard layouts, and it's not that unusual to have problems with one that you can live with. Then you build yourself QMK or ZMK keyboard. They are programmable -- you can make them type anything. ANYTHING! Right? RIGHT?

No, that's not true. You can't go fully independent of OS language layouts, that are converting scancodes into the keycodes and then into the characters themselves. You press [Q] in the UA mode, it gets to the OS as [Q], layout mapping makes it [Й], and you see it like that in the text you're typing. Among others, this should resolve problems with shortcuts like [CTRL+S] that may become unusable in cyrillic layout (as there's no such thing as [S] in Ukrainian, so you just can't save!) or get to some very different place on the keyboard if you use COLEMAK or something even weirder ([ASDF] in QWERTY maps to [ARDT] in Colemak).

But why not make keyboard processor work even more? Why not provide the unicode code of the character instead of the scan code? Windows, Linux and Macos have their methods of the so-called [Unicode input](https://en.wikipedia.org/wiki/Unicode_input). Problem solved? Not really!

Macos has long lasting [bug](https://discussions.apple.com/thread/253636848) that prevents you from entering *some* codes using Unicode input. E.g. you may input [á] (code 0x00E1), but never could [à] (code 0x00E0). Similarly using the hex codes you can't enter greek pi (code 0x03C0). You can't enter cyrillic [р] (it *is* different from English [p]) -- seemingly just because their hex code ends with zero! (codes 0x0440).

It seems to me that in my 40s anywhere I dig deep enough I get to something very different from the diamonds: I get more and more old rancid standards and piles of ancient bugs without wings.
